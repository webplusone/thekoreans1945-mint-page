import { constants } from "ethers";
import { BodyNode, DomNode, el } from "skydapp-browser";
import { View, ViewParams } from "skydapp-common";
import ContractManager from "../ContractManager";
import TheKoreans1945Contract from "../contracts/TheKoreans1945Contract";
import TheKoreans1945MinterContract from "../contracts/TheKoreans1945MinterContract";
import NetworkProvider from "../network/NetworkProvider";
import Wallet from "../network/Wallet";

export default class Home implements View {

    private container: DomNode;
    private interval: any;

    private preMintTime = 1660564800; //15Aug22 12:00PM UTC
    private wlMintTime = 1660568400; //15Aug22 13:00PM UTC
    private publicMintTime = 1660654800; //16Aug22 13:00PM UTC

    private mintForm: DomNode;

    constructor() {
        BodyNode.append(
            this.container = el(".home-view",
                el("header"),
                el("main",
                    el("img", { src: "/images/crypto-punk.png", alt: "crypto-punk" }),
                    el("section",
                        el("img", { src: "/images/title.png" }),
                        el("p", "Free Mint August 15th 9~10PM KST | 12~1PM UTC"),
                        this.mintForm = el(".mint-form", "..."),
                        el("img.mobile-punks", { src: "/images/mobile-crypto-punk.png" }),
                        el("p", "The Koreans NFT is not affiliated with Yuga Labs in any way.\n\nThis is a free-mint project by Web+1. Most of the secondary royalties generated by this project will go towards supporting artists and projects in the web 3 ecosystem.\n\nA special thank you goes out to #CryptoPunks CryptoPunks #8621 #2113 #4291 #8569 #3473 #4200 #3817 #2560 #3999 and #5289 for supporting our project with their commercial rights and/or moral support🙏❤️ That’s love!!"),
                    ),
                ),
                el("footer",
                    el("img", { src: "/images/koreans-bottom.png" }),
                ),
            ),
        );

        Wallet.on("connect", () => this.load());
        this.interval = setInterval(() => this.load(), 15000);
    }

    private async load() {
        const address = await Wallet.loadAddress();
        if (address !== undefined) {

            const timestamp = (await NetworkProvider.getBlock(await NetworkProvider.getBlockNumber())).timestamp;

            // 아직 민팅 시간이 아님
            if (timestamp < this.preMintTime) {

                const info1 = await ContractManager.loadPremintBalance(address);
                const info2 = await ContractManager.loadWLBalance(address);

                this.mintForm.empty().append(
                    el("p", "It isn’t time to mint yet. Please hold!"),
                );

                if (info1.balance > 0) {
                    this.mintForm.append(el("p", `You are eligible for the pre-mint, starting at 12PM UTC.\n(Your max number of mints: 1)`));
                }
                if (info2.balance > 0) {
                    this.mintForm.append(el("p", `You are eligible for the whitelisted mints, starting at 1PM UTC.\n(Your max number of mints: ${info2.balance})`));
                } else if (await TheKoreans1945MinterContract.isListedUser(address)) {
                    this.mintForm.append(el("p", `You are eligible for the whitelisted mints, starting at 1PM UTC.\n(Your max number of mints: 1)`));
                }

                if (info1.balance === 0 && info2.balance === 0) {
                    this.mintForm.append(el("p", "Oops! Sorry, you are not eligible for the mint."));
                }
            }

            // 프리민팅 기간
            else if (timestamp < this.wlMintTime) {
                const info = await ContractManager.loadPremintBalance(address);
                if (info.balance > 0) {
                    const minted = (await TheKoreans1945MinterContract.mintedAmount(address, info.addr)).toNumber();
                    if (minted === 0) {
                        this.displayMintForm(info.addr, 1);
                    } else {
                        const info2 = await ContractManager.loadWLBalance(address);
                        if (info2.balance > 0) {
                            this.mintForm.empty().append(
                                el("p", "It isn’t time to mint yet. Please hold!"),
                                el("p", `You are eligible for the whitelisted mints, starting at 1PM UTC.\n(Your max number of mints: ${info2.balance})`),
                            );
                        } else if (await TheKoreans1945MinterContract.isListedUser(address)) {
                            this.mintForm.empty().append(
                                el("p", "It isn’t time to mint yet. Please hold!"),
                                el("p", `You are eligible for the whitelisted mints, starting at 1PM UTC.\n(Your max number of mints: 1)`),
                            );
                        } else {
                            this.mintForm.empty().append(el("p", "Oops! Sorry, you are not eligible for the mint."));
                        }
                    }
                } else {
                    const info2 = await ContractManager.loadWLBalance(address);
                    if (info2.balance > 0) {
                        this.mintForm.empty().append(
                            el("p", "It isn’t time to mint yet. Please hold!"),
                            el("p", `You are eligible for the whitelisted mints, starting at 1PM UTC.\n(Your max number of mints: ${info2.balance})`),
                        );
                    } else if (await TheKoreans1945MinterContract.isListedUser(address)) {
                        this.mintForm.empty().append(
                            el("p", "It isn’t time to mint yet. Please hold!"),
                            el("p", `You are eligible for the whitelisted mints, starting at 1PM UTC.\n(Your max number of mints: 1)`),
                        );
                    } else {
                        this.mintForm.empty().append(el("p", "Oops! Sorry, you are not eligible for the mint."));
                    }
                }
            }

            // 화리민팅 기간
            else if (timestamp < this.publicMintTime) {
                const info = await ContractManager.loadWLBalance(address);
                if (info.balance > 0) {
                    const totalSupply = await TheKoreans1945Contract.totalSupply();
                    const infos = await ContractManager.loadWLBalances(address);
                    this.mintForm.empty();
                    for (const info of infos) {
                        if (info.balance > 0) {
                            this.mintForm.append(
                                el(".info-container",
                                    el(".info",
                                        el("h6", "Minted"),
                                        el("p", totalSupply.toString()),
                                    ),
                                    el(".info",
                                        el("h6", "Max of"),
                                        el("p", String(info.balance)),
                                    ),
                                ),
                                el("a.mint", "Mint!", {
                                    click: () => TheKoreans1945MinterContract.mint(info.addr),
                                }),
                            );
                        }
                    }
                } else if (await TheKoreans1945MinterContract.isListedUser(address)) {
                    this.displayMintForm(constants.AddressZero, 1);
                } else {
                    this.mintForm.empty().append(el("p", "Oops! Sorry, you are not eligible for the mint."));
                }
            }

            // 퍼블릭 기간
            else {
                this.displayMintForm(constants.AddressZero, 1);
            }
        }
    }

    private async displayMintForm(nft: string, mintableCount: number) {
        const totalSupply = await TheKoreans1945Contract.totalSupply();
        if (totalSupply.eq(1945)) {
            this.mintForm.empty().append(el("p", "We are minted out!  Thank you all so much!"));
        } else {
            this.mintForm.empty().append(
                el(".info-container",
                    el(".info",
                        el("h6", "Minted"),
                        el("p", totalSupply.toString()),
                    ),
                    el(".info",
                        el("h6", "Max of"),
                        el("p", String(mintableCount)),
                    ),
                ),
                el("a.mint", "Mint!", {
                    click: () => TheKoreans1945MinterContract.mint(nft),
                }),
            );
        }
    }

    public changeParams(params: ViewParams, uri: string): void { }

    public close(): void {
        clearInterval(this.interval);
        this.container.delete();
    }
}
