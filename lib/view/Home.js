"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
const skydapp_browser_1 = require("skydapp-browser");
const ContractManager_1 = __importDefault(require("../ContractManager"));
const TheKoreans1945Contract_1 = __importDefault(require("../contracts/TheKoreans1945Contract"));
const TheKoreans1945MinterContract_1 = __importDefault(require("../contracts/TheKoreans1945MinterContract"));
const NetworkProvider_1 = __importDefault(require("../network/NetworkProvider"));
const Wallet_1 = __importDefault(require("../network/Wallet"));
class Home {
    constructor() {
        this.preMintTime = 1660564800;
        this.wlMintTime = 1660568400;
        this.publicMintTime = 1660654800;
        skydapp_browser_1.BodyNode.append(this.container = (0, skydapp_browser_1.el)(".home-view", (0, skydapp_browser_1.el)("header"), (0, skydapp_browser_1.el)("main", (0, skydapp_browser_1.el)("img", { src: "/images/crypto-punk.png", alt: "crypto-punk" }), (0, skydapp_browser_1.el)("section", (0, skydapp_browser_1.el)("img", { src: "/images/title.png" }), (0, skydapp_browser_1.el)("p", "Free Mint August 15th 9~10PM KST | 12~1PM UTC"), this.mintForm = (0, skydapp_browser_1.el)(".mint-form", "..."), (0, skydapp_browser_1.el)("img.mobile-punks", { src: "/images/mobile-crypto-punk.png" }), (0, skydapp_browser_1.el)("p", "The Koreans NFT is not affiliated with Yuga Labs in any way.\n\nThis is a free-mint project by Web+1. Most of the secondary royalties generated by this project will go towards supporting artists and projects in the web 3 ecosystem.\n\nA special thank you goes out to #CryptoPunks CryptoPunks #8621 #2113 #4291 #8569 #3473 #4200 #3817 #2560 #3999 and #5289 for supporting our project with their commercial rights and/or moral support🙏❤️ That’s love!!"))), (0, skydapp_browser_1.el)("footer", (0, skydapp_browser_1.el)("img", { src: "/images/koreans-bottom.png" }))));
        Wallet_1.default.on("connect", () => this.load());
        this.interval = setInterval(() => this.load(), 15000);
    }
    async load() {
        const address = await Wallet_1.default.loadAddress();
        if (address !== undefined) {
            const timestamp = (await NetworkProvider_1.default.getBlock(await NetworkProvider_1.default.getBlockNumber())).timestamp;
            if (timestamp < this.preMintTime) {
                const info1 = await ContractManager_1.default.loadPremintBalance(address);
                const info2 = await ContractManager_1.default.loadWLBalance(address);
                this.mintForm.empty().append((0, skydapp_browser_1.el)("p", "It isn’t time to mint yet. Please hold!"));
                if (info1.balance > 0) {
                    this.mintForm.append((0, skydapp_browser_1.el)("p", `You are eligible for the pre-mint, starting at 12PM UTC.\n(Your max number of mints: 1)`));
                }
                if (info2.balance > 0) {
                    this.mintForm.append((0, skydapp_browser_1.el)("p", `You are eligible for the whitelisted mints, starting at 1PM UTC.\n(Your max number of mints: ${info2.balance})`));
                }
                if (info1.balance === 0 && info2.balance === 0) {
                    this.mintForm.append((0, skydapp_browser_1.el)("p", "Oops! Sorry, you are not eligible for the mint."));
                }
            }
            else if (timestamp < this.wlMintTime) {
                const info = await ContractManager_1.default.loadPremintBalance(address);
                if (info.balance > 0) {
                    const minted = (await TheKoreans1945MinterContract_1.default.mintedAmount(address, info.addr)).toNumber();
                    if (minted === 0) {
                        this.displayMintForm(info.addr, 1);
                    }
                    else {
                        const info2 = await ContractManager_1.default.loadWLBalance(address);
                        if (info2.balance > 0) {
                            this.mintForm.empty().append((0, skydapp_browser_1.el)("p", "It isn’t time to mint yet. Please hold!"), (0, skydapp_browser_1.el)("p", `You are eligible for the whitelisted mints, starting at 1PM UTC.\n(Your max number of mints: ${info2.balance})`));
                        }
                        else {
                            this.mintForm.empty().append((0, skydapp_browser_1.el)("p", "Oops! Sorry, you are not eligible for the mint."));
                        }
                    }
                }
                else {
                    const info2 = await ContractManager_1.default.loadWLBalance(address);
                    if (info2.balance > 0) {
                        this.mintForm.empty().append((0, skydapp_browser_1.el)("p", "It isn’t time to mint yet. Please hold!"), (0, skydapp_browser_1.el)("p", `You are eligible for the whitelisted mints, starting at 1PM UTC.\n(Your max number of mints: ${info2.balance})`));
                    }
                    else {
                        this.mintForm.empty().append((0, skydapp_browser_1.el)("p", "Oops! Sorry, you are not eligible for the mint."));
                    }
                }
            }
            else if (timestamp < this.publicMintTime) {
                const info = await ContractManager_1.default.loadWLBalance(address);
                if (info.balance > 0) {
                    const minted = (await TheKoreans1945MinterContract_1.default.mintedAmount(address, info.addr)).toNumber();
                    this.displayMintForm(info.addr, info.balance - minted);
                }
                else if (await TheKoreans1945MinterContract_1.default.isListedUser(address)) {
                    this.displayMintForm(ethers_1.constants.AddressZero, 1);
                }
                else {
                    this.mintForm.empty().append((0, skydapp_browser_1.el)("p", "Oops! Sorry, you are not eligible for the mint."));
                }
            }
            else {
                this.displayMintForm(ethers_1.constants.AddressZero, 1);
            }
        }
    }
    async displayMintForm(nft, mintableCount) {
        const totalSupply = await TheKoreans1945Contract_1.default.totalSupply();
        if (totalSupply.eq(1945)) {
            this.mintForm.empty().append((0, skydapp_browser_1.el)("p", "We are minted out!  Thank you all so much!"));
        }
        else {
            this.mintForm.empty().append((0, skydapp_browser_1.el)(".info-container", (0, skydapp_browser_1.el)(".info", (0, skydapp_browser_1.el)("h6", "Minted"), (0, skydapp_browser_1.el)("p", totalSupply.toString())), (0, skydapp_browser_1.el)(".info", (0, skydapp_browser_1.el)("h6", "Max of"), (0, skydapp_browser_1.el)("p", String(mintableCount)))), (0, skydapp_browser_1.el)("a.mint", "Mint!", {
                click: () => TheKoreans1945MinterContract_1.default.mint(nft),
            }));
        }
    }
    changeParams(params, uri) { }
    close() {
        clearInterval(this.interval);
        this.container.delete();
    }
}
exports.default = Home;
//# sourceMappingURL=Home.js.map